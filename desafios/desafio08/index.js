// TEMOS UMA ESTAÇÃO ESPACIAÇ QUE TEM UMA LISTA DE NAVES ENGATADAS.
// CADA NAVE POSSUI NOME, QUANTIDADE DE TRIPULANTES, UMA INFORMAÇÃO SE ESTA OU NÃO ENGATADA E OUTRA INFORMANDO SE AS PORTAS DE ENTRADA ESTÃO ABERTAS.

//  PARAA GERENCIAS ESSES DADOS, UM MENU DEVE SER EXIBIDO COM AS SEGUINTES OPÇÕES:

// 1 : REALIZAR O ENGATE:
    // NESSA OPÇÃO DEVE SER POSSIVEL CADASTRAR UMA NAVE COM NOME E NUMERO DE TRIPULANTES.
    // APOS O CADASTRO, A NAVE PODE SER ENGATADA. QUANDO UMA NAVE É ENGATADA, SUAS PORTAS TAMBEM SÃO ABERTAS. ENTÃO, ALEM DE ALTERAR A PROPRIEDADE DA NAVE QUE INFORMA SE ELA ESTA ENGATADA, ALTERE TAMBEM A PROPRIEDADE QUE INFORMA SE AS PORTAS DE ENTRADA ESTÃO ABERTAS.

    // 2 : IMPRIMIR NAVES
        // A LISTA DE NAVES DEVE SER IMPRESSA COM UM ALERT

    //  3 : SAIR DO PROGRAMA
        //  AO CLICAR PARA SAIR, O PROGRAMA DEVE SEER ENCERRADO

        // CRIE APENAS A CLASSE PARA A NAVE
        // CRIE UM ARRAY PARA ARMAZENAR AS NAVES
        // O PROGRAMA DEVE SER ENCERRADO SOMENTE QUANDO O USUARIO DIGITAR A OPÇÃO PARA SAIR 



class naves {
    constructor(nome, qtdTripulantes){ // SERA RESPONSAVEL PELA CRIAÇÃO DE NAVES
        this.nome = nome
        this.qtdTripulantes = qtdTripulantes
        this.engatada = false 
        this.portasAbertas = false
    }

    engate(){
        this.engatada = true
        this.portasAbertas = true
    }
}


function menu(){ // RESPONSAVEL PELO MENU
    let opçõesMenu

    while(opçõesMenu != "1" && opçõesMenu != "2" && opçõesMenu != "3"){ // ENQUANTO O USUARIO NÃO ESCOLHER UMA OPÇÃO ELE SEMPRE VAI MOSTRAR O MENU.
        opçõesMenu = prompt("O que deseja Fazer?\n1 - Engatar a Nave\n2 - Imprimir Naves\n3 - Sair do programa")
    }

    return opçõesMenu // VAI RETORNAR A OPÇÃO QUE O USUARIO ESCOLHEU PARA A FUNÇÃO MENU.
}

let navesEngatadas = [] // ARRAY VAZIO QUE VAI GUARDAR AS NAVES CRIADAS PELO CONSTRUTOR.

let opçõesMenu // COMO A OPÇÃOMENU DE CIMA ESTA DENTRO DO ESCOPO DE UMA FUNÇÃO ELA NÃO VAI CONFUNDIR COM ESSA MESMO SENDO DO MESMO NOME.

function criarNaves(){
    let nomeNave = prompt("Informe o nome da nave:")
    let qtdTripulantes = prompt("Informe a quantidade de tripulantes:")
    
    let spaçonaves = new naves(nomeNave, qtdTripulantes) // CRIANDO UMA NOVA ESTANCIA DA NOSSA CLASSE NAVES QUE VAI SER RESPONSAVEL PELA CRIAÇÃO DAS NAVES. NOTE QUE PASSAMOS COMO PARAMETRO O NOME QUE USUARIO DIGITOU E A QUANTIDADE DE TRIPULANTES.

    return spaçonaves // RETONAMOS A ESPAÇONAVE QUE FOI CRIADA E SALVADA DENTRO DA VARIAVEL SPAÇONAVE, E IMPORTANTE RETORNAR POIS NO SWITCH ABAIXO A VARIAVEL ADICIONAR NAVES VAI RECEBER O RESULTADO DESSE RETORNO.
}

function mostrarNaves(spaçonave){ // NOTE NO SWITCH ABAIXO QUE O NOME DE PARAMETRO NÃO PRECISA SER O MESMO, APENAS PRECISA TER UM NOME PARA PARA OS VALORES.
    let listaDeNaves = "" // LISTA VAZIA PARA SALVAR AS NAVES
    let msg 
    spaçonave.forEach((spaçonave, index) =>{ // O FOREACH VAI PERCORRER O RESULTADO QUE SPAÇONAVE RECEBEU QUE NO NOSSO CASO FOI O RETORNO DO NOSSO ARRAY LA DO SWITCH. OS DOIS PARAMETROS SPAÇONAVE E INDEX SÃO IMPORTANTES O INDEX VAI MOSTRAR O INDICE, COLOCAMOS INDEX + 1 POIS O INDICE COMEÇA COM ZERO, JA O SPAÇONAVE SERVE PARA ACESSARMOS O NOME E A QUANTIDADE DE TRIPULANTES DA NAVE NO NOSSO ARRAY, SEM ESSE SPAÇONAVE MESMO COLOCANDO SPAÇONAVE.NOME NÃO EXIBIRIA NADA.

        if(spaçonave.engatada == true){ // FIZ ISSO SO PARA TESTE POIS NO PROGRAMA FINAL NÃO MOTRAVA O TIPO DE ENGATE E SE AS PORTAS ESTAVAM ABERTAS.
            msg = "Nave engatada e portas Abertas"
        }
        
        listaDeNaves += `\n${index + 1} - (${spaçonave.nome}, ${spaçonave.qtdTripulantes} Tripulantes, ${msg})` // AQUI DEPOIS DE PERCORRER O NOSSO ARRAY DE NAVES, A NOSSA VARIAVVEL LISTA DE NAVES VAI RECEBER ESSA FRASE CONTENDO O INDICE O NOME E A QUANTIDADE DE TRIPULANTES DA NAVE.
    })

    alert(listaDeNaves) // VAI MOSTRAR A FRASE ACIMA QUANDO O USUARIO APERTAS A OPÇÃO 2:
}

while(opçõesMenu != "3"){  // ENQUANTO A OPÇÃO QUE O USUARIO ESCOLHER FOR DIFERENTE DE 3 .
    opçõesMenu = menu() // COMO A GENTE RETORNOU O QUE O USUARIO ESCOLHEU PARA A FUNÇÃO MENU, ESSA NOSSA VARIAVEL OPÇÃOMENU VAI RECEBER O RESULTADO DO RETORNO.

    switch(opçõesMenu){
        case "1":
            let adicionarNaves = criarNaves() // ESSA VARIAVEL VAI RECEBER AS NAVES QUE A GENTE CRIOU E RETORNOU PARA A FUNÇÃO CRIAR NAVES.
            adicionarNaves.engate() // COMO A GENTE SO CRIOU AS NAVES E NÃO ENGATAMOS, TEREMOS QUE ENGATAR ELA, CHAMANDO A FUNÇÃO ENGATE DA NOSSA CLASSE.
            navesEngatadas.push(adicionarNaves) // DEPOIS DE ENGATADA PODEMOS AGORA ADICIONAR ELA NO NOSSO ARRAY VAZIO ATRAVES DO METODO PUSH.
            break
            // PRIMEIRA PARTE DO SWITCH FINALIZADA.

        case "2":
            mostrarNaves(navesEngatadas) // A SEGUNDA PARTE É MOSTRAR AS NAVES ENGATADAS QUE ESTÃO NO NOSSO ARRAY, PARA ISSO PASSAMOS O NOME ARRAY COMO PARAMETRO
            // EM UMA FUNÇÃO CHAMADA MOSTRAR NAVES.
            break

            // ESSE SWITCH TEM QUE SER ATE O 2 POIS LA EM CIMA DIZ : ENQUANTO A OPÇÕES MENU FOR DIFERENTE DE 3, EXECUTE.
    }
}